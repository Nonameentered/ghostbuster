To describe a program, as its name indicates it, a basic algorithm is a sort of very simplified version of the complete program. Each step of the algorithm may also contain some "sub-steps" or sub-sub-sub steps that need to be explained and refined. For this program, these are the steps that needed to be "refined":
Ask for product details: in order to inform and save the program details in the program, there will be two steps involved. First, the program has to inform the user that he needs to enter some information. This will be done by outputting a message on the screen. Secondly, to save the information in the program's memory, an input from the user will have to be made. For some inputs, the program will have to validate the input:
Asking for and placing orders: asking if the user wishes to place an order and actually allowing him to do so involve several steps. First of all, a message outputted on the screen should ask the user if he wants to place an order. Assuming the answer is yes, the program should then ask him if he wishes to add a product. If yes, the program should give the user the opportunity to enter a product name in order to place the order. If the name matches one of the records, the details should appear on the screen and the user should enter the quantity of products he wishes to order (when he is asked to do so). An update of the stock available and the total cost will be made at that point.
The program will need to subtract the value of the stock available with the quantity of product ordered.
Stock Available = Stock Available - Quantity Ordered
The program will need to add the total cost value to the multiplication of the cost of product entered by the quantity ordered.
Total Cost = Total Cost + (Product Price * Quantity Ordered)
The program will loop this as long as the user wants to keep adding products to the order.
Display total cost: at the end of the program, once the user has finished adding products to his order, the total cost of the order has to be shown (in pence).
Ask if user wishes to place another order: after having shown the total cost of the order, the program will have to ask the user if he wishes to place a new order. If he answers yes, the program should simply loop and restart where the user has the opportunity to add a product to the order. If he does not want to, the program should end.
To solve the problem once and for all, all I had to do is to modify the wrong piece of information from the Delphi source code. I could then compile the program and run it again to check that it was working as expected. If you look at the screenshots, you will see a proof that the program works as expected as it accepted the appropriate ID's.
Finally, you will also notice that the program matches perfectly the program specification and design that was planned. If you compare the final version from the screenshots with the third consideration of the program, trace table and the testing, you will see that they match really well.