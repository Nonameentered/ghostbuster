Nowadays, a lot of scientific research domains (such as medicine, cancer researches, aerospace, etc...) use some applications solving several complex mathematical algorithms. Then, these applications need a lot of computational resources to be executed. The research in computing developed some solutions supplying a lot of computational resources such as distributed computer (cluster), parallel execution, etc... Hence, these solutions can be used to execute complex scientific applications which need a lot of resources. These applications would then be executed in a parallel way.
The main purpose of this project has been to develop a "school scientific" application using the  distributed computer called Beowulf. This application, developed in C using MPI, computes the matrices multiplication using two ways (sequential one and parallel one) and solves a system of linear equations (as well as the inverse of a matrix) using the iterative Jacobi method. This application enables us to understand why and in which conditions a parallel algorithm is often better than a sequential one, explaining these two ways and calculating the efficiency of the parallel solution.
Hence, this project involves a part of researches dealing with computing technologies (such as distributed computing, parallel execution, etc...) as well as mathematical concepts using matrices and system of linear equations. Another main part of this report deals with the mathematical application which has been created explaining how such mathematical algorithms have been developed in C using MPI.
In this part, we will explain in a first time what is exactly a parallel execution, the reasons why we prefer to use it rather than a sequential execution (in some case). Then we will introduce the "hardware" environment in which such parallel applications can be used. Afterwards we will explain how it is possible to create, run and manage such applications in this environment. After that, we will be able to explain which technological solution has been used in this project.
As this project involves some mathematical concept, we have to introduce them before explaining how compute them. So, in this part the main mathematic concepts concerning matrices are explained in order to introduce the problem of systems of linear equations. Hence, the principles of matrices will be described as well as different methods used to solve a system of linear equations. After that, the first step to compute such mathematical problems will be shown via some sequential algorithms given in pseudo-code. These algorithms will be explained and the way to parallelise such algorithms will be described.
In this part, the implemented solution using C and MPI is detailed. Actually we won't explain again how these algorithms work (which is already done in the part 2) but we will explain how they have been translated and computed using the C language. In a first time, the main structure representing the matrix in the dynamic memory is explained, afterwards the "library" implemented in this project called "Matrix Tools" is introduced. After that the way used to implement the sequential algorithms in C, introduced in the previous part in pseudo-code, solving the mathematical issues are explained. Then the main concepts of the MPI library will be explained in order to introduce the parallel algorithms implemented.
After that, the benchmarking will be analysed explaining how the matrices generators have been created and how the benchmark programs work. The results obtained on Beowulf will then be presented. Eventually, some details about the way to compile and execute these algorithms and benchmark programs on Beowulf will be given.
We have seen in this project several technologies and concepts concerning parallel mathematical applications, distributed computing etc... A lot of these technologies are still developed and are the subject of a lot of research projects throughout the world. As we saw, distributed computing is a very large and interesting subject, but complex. That is why this project involved a lot of researches dealing with these technologies and concepts which I nearly didn't know before.
The most difficult part has been the understanding part. Indeed, I had to understand the concepts dealing with the computing part (distributed computing, parallel algorithm, Message Passing Interface, etc...) and the mathematical part (different properties of matrices, Jacobi method, etc...). But after this part, came the practical part which involved the development of my own mathematical applications. This part was also very interesting because I could try concretely all the concepts I had read before.
Work using a cluster such as the Brookes Beowulf was totally new for. It was a real great opportunity to be able to use it because we can't use such a cluster "every day" at home. Applications which have been created in this project gave some interesting results, such as the results obtained by the matrices multiplication program with a speedup not bad at all and promising. The results obtained, with the Jacobi method application, were good because we could obtain the inverse of a matrix very quickly and using either a sequential or a parallel way. However, the performances obtained with the Jacobi method application were not good in a first time because the parallel way was longer than the sequential one. But after a discussion with my supervisor, I have understood that the Jacobi parallel method needs very large matrices to be efficient.
To conclude, this project was very interesting and I really learnt a lot about new concepts (for me), thanks to it.