The aim of these laboratories is to provide an introduction to some of the features of a microcontroller (M16C/62) from the Mitsubishi M16C family as well as those of a program that provides an integrated development environment (IDE) for the creation and testing of application programs. The codes and comments are written and programmed in IAR Embedded Workshop which provided the integrated development environment required.
The microcontroller had two 7 segment display devices and 3 push button switches. The port responsible for the segments output was port P0 and the port responsible for the enabling the LED's output was port 1.
With reference from the handouts the main objective of these laboratories was to carry out the following:
I used the Appendix A to determine how the two 7 segment display devices must be driven on a time-multiplexed basis and to identify the microcontroller I/O pins involved and the voltage levels required to activate both particular display device and the individual segments.
I used the Appendix B to determine the special function registers associated with the I/O pins used.
The Appendix C for the codes given
With the knowledge I had and understanding the lectures notes I wrote the codes and comments for the programs
The hardware elements featured in the laboratories were: the microcontroller input/output (I/O) ports, 7 segment display devices and push button switches.
Firstly I connected the M16C Microcontroller board to a PC and powered up both boards. The codes and comments were written and programmed using IAR Embedded Workshop which gives integrated development environment required for creating and testing the applications.
With the reference from the handouts given, the two program files Assi1.c and Assl2i.c carried out the following operations:
Assi1.c- It keeps a running count (mod 10) in the LED 2 display
Assil2i.c- It contained an incomplete program for the microcontroller to count (modulo 100) the number of times switch SW1 was operated and display the result.
When the programs were executed the results obtained was as expected.
For the first assignment, there are two methods were used to show how SW1 is used to control the rotation in 2 different ways. The result obtained by using the 1 st method was when SW1 was pressed only then the rotation started and when released it stopped. Under the 2 nd method the rotation started when the program was executed, but when SW1 is pressed it stops the rotation and when pressed again it starts the rotation. In both methods, the delay function was observed and it affected the time for which the output is displayed. If the value of delay is more the more time the output is displayed meaning it gives sufficient time for the eyes to recognize the changes.
For the 2 nd assignment, when the program was executed it turned off both LEDs and when SW1 is pressed it, LED2 displays 0. Each time it is then pressed it shows the count from 0-99 on both LEDs. Though LED1 is set off when the count is under 10. When count reaches 100 it turns off both LEDs and when pressed again it starts the count from 0-99 again.
From my observations, the program codes functioned as required and therefore I met all the requirement of the tasks.