Evolutionary computation (EC) as a subfield of artificial intelligence means design and application of computational model of evolutional approach which is based on the Darwinian theory. It refers a term of some computational techniques dependant upon the evolution of biological life in the natural world. Involved with combinatorial optimization problems, many kinds of EC models have been developed by some metaheuristic optimization algorithms, such as evolutionary algorithm (EA) which is a subset of evolutionary computation, including evolutionary programming(EP), evolutionary strategies(ES), genetic algorithms(GA), genetic programming(GP) and learning classifier systems. EC model can improve the electronic devices more intelligent to program itself without human preprogramming what was happening and without human intervention. It is widely used in the science and engineering area, such as innovative design, optimization, machine learning and flexible and adaptive system. Genetic algorithms (GAs) which is one of the most important EC techniques have been applied to solve practical problems in the rapidly growing field. Through three experiments of two maths function and a Robot Racing software which are all implemented by GAs method to evolve the parameters, it discern GAs have the positive impacts on the efficiency of searching optimized solutions to some specified problem.
With the rapidly development of computer science and electronic engineering subjects, more and more advanced instruments those have the close relationship with human are invented to cause a digital resolution. They are changing the world and the human life. More and more hi-tech products are appearing among a variety of areas, from design of integrated circuit (IC) even to the application of artificial intelligent (AI) technology which is playing an important role in the modern world.
AI is no longer only a movie which can not only be watched in its ever expanding influence to each corner of the world. The science of creating machines which can solve problems and reason like humans is usually referred to as artificial intelligence. AI can depend on different external situation to make a final decision like a reasonable human. Around us, it is easy to find that AI gives final opinions to help people make judgement on many issues in every day life. The most interesting application in the current age, is embedding AI technology into robot. However, most robots currently could only be considered as machines in our life but not intelligent. As stated by Murphy: "While robots are mechanical, they don't have to be anthropomorphic or even animal-like." For example, robot which delivers hospital meals to patients looks like a cart, not a nurse [1]. So the robot associated with AI technology should have the ability to solve some problem without the preprogrammed by engineer. Moreover, the ability of learning can not be ignored on AI robot. It refers that robot can feel the influence of environment automatically and program itself to search the optimized solution so that it could cope with the unpredictable issue it met. Subsequently, each behaviour of AI robot causes it to contact the external world, and perceive the information of feedback about the change of the world through some instrument like sensor. The signals received are transmitted to the control centre which affect its former target and find a new way to meet it, immediately followed by generating a new cycle of actions.
In the mean time, from high level of programming angle, to get machines programming themselves to figure out a most suitable way to process the digital signal received, the EC method by people like John Koza of Stanford University has been used to improve this process to create such "intelligent machine". This approach integrates the evolutional concept into computational problems to select out efficient way through searching among huge number of possibilities for solutions. In biology, the target of evolution is to produce the desired individual that is highly fit the variable environment. The individual is survived dependant upon its fitness in environment. The theory of "survival of fitness" is Darwin stuff that "through reproduction, inheritance and the occasional mutation within a population, individuals or groups of individuals with similar characteristics within that population would flourish when placed in a particular environment". It is stated by Richard Gardiner who is trying to embed the EC method into his mobile robot "Antaeus" to make it have the learning ability, a practical experiment at Cybernetics department of Reading University. So the simplified law of evolution is a continuous circle in which the individual is evolved by random variation such as mutation and crossover, and the fittest one which has the "qualification" to survive could be picked up through natural selection, subsequently, their genetic stuff will be kept and past to a new generation to continue process in the same circle.
For the robot control in the real world, the adaptive program is desired to be applied on control system so that it can make each robot make good performance in facing the variable environment. As stated above, some computational approaches inspired by biological evolution which is a theory supported by "survival of fittest" and "natural selection" can be used to realize the adaptive system on robot control. "The candidate solutions represent each possible behavior of the robot and based on the overall performance of the candidates, each could be assigned a fitness value. Genetic operators could then be applied to improve the performance of the population of behaviors. One cycle of testing all of the competimg behavior is defined as a generation, and is repeated until a good behavior is evolved. The good behavior is then applied to the real world."[2]
The software of robot racing is a competition for programmers and an on-going challenge for practice of Artificial Intelligence and real-time adaptive optimal control. It consists of a simulation of the physics of cars racing on a track, a graphic display of the race, and a separate control program (robot 'driver') for each car [3]. This software can roughly simulate the robot control condition in the continuing changed environment. The evolutional approach which is used to modify the software is GA which was invented by John Holland in the 1960s and developed by Holland and his students and colleagues at the University of Michigan in 1960s and 1970s. GA is integrated into the present software to evolve the parameters of each car. The time of each lap can be taken as the feedback which is the interaction with the environment. It reflects the result of the influence of GA and is directly transmitted into programming level to join the evolution. In this GA function, the lap time is fitness that illustrates how well the speed determined by those evolved parameters. It continually changes as parameters evolve. About the more details on evolution process and test result, will be showed in the following section of this report.
Different from other evolutionary computation approaches which are used to solve specific problems, GA is to "formally study the phenomenon of adaptation as it occurs in nature and to develop ways in which the mechanisms of natural adaptation might be imported into computer system" [4]. Virtually, GA is a kind of adaptive algorithm based on the evolutionary ideas of natural selection. The basic techniques of the GA are designed to simulate processes in natural systems of evolution which is inspired by the principles first laid down by Charles Darwin of survival of the fittest.
GA following the principle of "survival of the fittest" processes individuals over consecutive generation for solving the optimized searching problem. Each generation is consist of a variety of character strings or real-valued parameters those stand for the chromosome that seen in our DNA. Each individual represents a point in a search space and a possible solution. The individuals in the population are then made to go through a process of evolution. More details of implementation and application of EC will be illustrated later.
So far, some basic idea and theory of EC and GA which is the popular EC approach are displayed above. This report is organized to discover the impact and development as well as some specific applications of EC. In the next section, the background and of EC are briefly introduced. To investigate how EC works on some practical problems, GA is applied to maths function to search peaks as well as the game software named robot racing to figure out the best parameters. Then the results of those three tasks will be illustrated and discussed to analyze the influence of GA.
Evolutionary computation (EC) as a subfield of artificial intelligence means design and application of computational model of evolutional approach which is based on the Darwinian theory. "EC uses computational models of evolutionary processes as key elements in the design and implementation of computer-based problem solving systems. There are a variety of evolutionary computational models that have been proposed and studied which we will refer to as evolutionary algorithms. They share a common conceptual base of simulating the evolution of individual structures via processes of selection and reproduction. These processes depend on the perceived performance (fitness) of the individual structures as defined by an environment. More precisely, evolutionary algorithms maintain a population of structures that evolve according to rules of selection and other operators, such as recombination and mutation. Each individual in the population receives a measure of its fitness in the environment. Selection focuses attention on high fitness individuals, thus exploiting the available fitness information. Recombination and mutation perturb those individuals, providing general heuristics for exploration. " [5]
Because EA is inspired by biological evolution, as mentioned above, reproduction, mutation, recombination, natural selection and survival of the fittest, so the illustration of EA can be offered by biological terms, although sometimes they do not have direct connection.
To capture the main idea and structure of EA, the working flow of EA is list in the following lines. From lecture note of week 1:
Through the pseudo code above, the procedure of EA is briefly described. In the first generation P(0), individual population whose size is defined as a constant value by each EA is randomly initialized through EA model. The evaluation function is engaged to do the measurement work on each population, so a fitness value which is used to indicate its worth in some environment is added up to the individual. "Selection is often performed in two steps, parent selection and survival. Parent selection decides who becomes parent and how many children the parents have." [5] Children are produced by crossover, which exchanges information between parents. In the maths experiment which will be displayed in the following sections of this report, the approach of exchange on crossover is getting average value of parents. To increase the diversity, mutation function is introduced into the EA to perturb individuals. At the last step of each single procedure, the children are evaluated to decide who survives in the population. Then they are evolved from generation to generation in the loop applications of evaluation, selection, recombination, and mutation as mentioned above.
EAs mainly comprise genetic algorithm, evolutionary programming, evolution strategy, genetic programming and learning classifier systems. As the specific examples, most of these instances of techniques share the same evolution theory, however, when they are applied to solve some particular problems, different manners are implemented at each evolutional step in a variety of evolutionary algorithms, which consist of the choices of representation for the individual structures, types of selection mechanism used, forms of genetic operators, and measures of performance [5]. This report concentrates on the GA implementation. In the next several sections of this report, optimized solutions to the specific practical problems are figured out by evolving the related parameters with GA.
Nowadays, GA plays an important role in the EC area as the most popular type of EA. "Genetic algorithms are typically implemented as a computer simulation in which a population of abstract representations (called chromosomes) of candidate solutions (called individuals) to an optimization problem evolves toward better solutions." [5] The application of GA is to search the optimized solution of a problem in the form of bit-strings and some neural networks, LISP expressions and real-valued vectors representation. In the basic structure of EA, selection, crossover and mutation, as three elemental types of operators, are involved to construct simplest form of GA. Basically, a simply GA is represented through the following step that is introduced in [4]:
Start from a population of randomly generated individuals of chromosomes which are candidate solutions to a problem.
Calculate the fitness of each chromosome in the population.
Set a loop to repeat evolution stuff to produce the offspring.
The fitness is evaluated in each generation, and based on fitness the individuals who have higher relative fitness are more likely selected to be the parents of current generation to produce "kids".
Using those found out parents, process the crossover which is used to exchange the information between the parents to form offspring. By recombining parts of good individuals, this process is likely to create even better individuals
With some low mutation probability, the offspring which is just produced are mutated through specific approaches to replace chromosomes in new generation. Its purpose is to maintain diversity within the population and inhibit premature convergence.
Update the current population with the new generation.
Repeat from step 2 which becomes current to start the next iteration of the algorithm.
GA offers significant benefits over more typical search of optimization techniques, variation on the main structure of GA have been widely applied in diverse scientific and engineering topics such as optimization, automatic programming, machine learning, economics, immune systems, ecology, population genetics, social systems and so on. Because of the success of GA in these areas, more and more interests in GA have been sharply raised in the recent years by the researcher from any area.
With the same theory of Darwinian concept which is survival of the fittest applied on GA, GP comes from the original work on genetic algorithm. "GP is an automated methodology inspired by biological evolution to find computer programs that best perform a user-defined task. It is therefore a particular machine learning technique that uses an evolutionary algorithm to optimize a population of computer programs according to a fitness landscape determined by a program's ability to perform a given computational task." [6] Although much of the theory associated with genetic operators is relied in GP as well, the hierarchical expression, which is manipulated in GP, is far different from the coded strings of GA. The hierarchical structure is a tree manipulation routine but not a flat and one dimensional string.
Similar as GP, based on the fixed structure of program which is the only fixed thing, EP is evolved by its numerical parameters. Traditionally, Representation and operators were specialized for the application area which is evolving finite state automata for machine learning tasks. Nowadays, it is often used as optimizer with any representation, such as real valued vectors are using in population to solve the real valued optimization problems. Also for the traveling salesman problems, ordered lists are called and graphs orient to applications with finite state machines. From the lecture note of week 6, the basic EP was formed by three basic steps (1) Choose an initial population of trial solutions at random. (2) Mutate each offspring. (3) Select a number of solutions based on fitness.
Compared with EP, typically, ES is applied to real-valued parameter optimization. The main characteristic feature of ES concentrates on self-adaptive mutation using standard deviation of Gaussian distribution to make each individual have an adaptive mutation. Typically ES is applied to real-valued parameter optimization problems
Nevertheless, during the recent years, interaction and communication among various evolutionary computation methods have been widely developed. "the boundaries between GAs, evolutionary strategies", evolutionary programming, and other evolutionary approaches have broken down to some extent." [4]
Next section, GA method will be detailed and analyzed involved with actual examples.
The applications of GA have been spread to a variety of fields, because GA can effectively find an optimized solution in a complicated search space through input limited information so that it is an effective searching procedure compared with other method. Basically, when GA is applied to face the present problem, the performance of GA will depend on the elements: encoding candidate solutions and the method of evaluating the corresponding performance of candidate solution, which is used to test whether it is the optimized solutions. In this section, the applications of GA on a maths function and a software of Robot Auto Racing Simulation will be illustrated to explain and present how to implement GA on practical problem and how well to use GA to search the optimized solutions.
From the statement of theory and three applications on practical problems in this report, it is obvious to discern that EC is a powerful tool to solve problem in a wide variety of scientific and engineering research area. It has been developed to a field which is importing biological technology into computation design. As the most popular evolutionary algorithm, the application of GA causes a great leap in development of intelligent computation. Through the exam on the maths function, it can be seen that GA can solve the problem of searching maximum value and first four highest peak values, moreover, compared with the figure plotted out by MATLAB, the results are precise but only a bit error around 0.01 on x value. Meanwhile, GA also has good performance in real world problem which is a simulation of car racing. Rely on the output file including time of each lap, which shows the time is getting shorter and shorter, it can be figured out that the parameter is evolved to be fitter and fitter with this search approach inspired by biology theory. However, only one parameter of car is evolved in this report, if a set of parameters of one car can be processed by GA as well, the performance of the car will be completely perfect after several laps.
However, in the area of working electronic devices, still some problem can not be solved due to scalability. To cope with more complex conditions, the traditional approach of EC must be added up information by human, because all the parameters in the conventional GA method need to be defined to corresponding binary value. It refers that the EC approach as mentioned in this report is lack of one important nature like element, development. As stated by Peter Bentley, who is the head of the Digital Biology Group at University College London, "The idea is that, by incorporating development, you avoid the one to one correspondence between a gene and a parameter. We are trying to get to the point where the genome is more like a recipe; a set of instruction should grow, rather than a complete blueprint specifying every last detail in advance."[8] So, in this open area, much work such as how to implement it into algorithm and how to incorporate with other field knowledge should be considered to improve EC to realize the dream of completely natural computation method in AI world.