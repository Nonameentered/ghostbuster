As part of the module CY3A2 System Identification we are required to create an ARX (AutoRegressive eXogenous) based recursive least squares program (using a template which has already been provided) to identify and work on a model.
The General definition of a dynamical system is accepted as the following:
with input signal {u(t)} , output signal as {y(t)} and where v(t) is some disturbance . (q -1) is the backward shift operator , In other words (q -1) y(t) = y (t-1) .
Equation (1) can be expressed as a linear regression
where ,
Hence the simplest ARX model can be written as
Without going into too much detail the formulae involved here in order to make the Recursive Least Square algorithm work can be summarized in four equations below where our objective is to get the estimated value of (from now on referred to as hat) .
The RLS algorithm can be modified for tracking time varying parameters . One approach is the RLS algorithm with a forgetting factor .
In this a term  called forgetting factor is introduced to (9) . <1 and is usually 0.99 or near that value . This means that as n increases , the measurements obtained previously are discounted . Older data has less effect on the coefficient estimation and hence forgotten.
Hence (9) is modified so that
In our given case we have to modify crib.m in such as way that it works as a recursive least square program . As required by our Assignment instructions we have to choose a stable second order system as our model. In other words
Here
A suitable stable second order model utilized for this purpose is
This part relates to a hear operated master/slave telerobot . We are provided with two sets of data each with step responses (from a 60mm step input) with different conditions of K p and K d in the PID controller . The input in the following cases will be u=60*ones(size(y)) . There are two sets of data sets we have been provided on which we have to do four tests each and comment on the results . In addition to plotting the coefficients and y and yhat , we are also required to plot a z transform and find the location of the a coefficients on a unit circle . If they ('a' coefficients ) all lie in the circle the given model is stable .
There are a total of eight experiments in this part four each for the two different sets of data . They specify dimensions of  with three figures the first plotting the coefficients , the second showing both y and yhat and the third showing a z-transform and finding locations of the final poles of 'a' coefficients .
Upgrade the basic RLS algorithm to either include instrument variable or a moving average noise model based on Pseudo Linear Regression , or both . Illustrate these by comparing results with those obtained in B.
From equation (4)
In other words if the disturbance is described as a moving average of a white noise sequence e(t) .
Then the resultant model is
also known as ARMAX model (AutoRegressive Moving Average and eXogenous variable)
The model which I am going to demonstrate here (for the sake of simplicity and to keep in check the length of this report) is the one where n a=n b=3 & n c=1 . Reasons for this being that these give the best way to compare the two different approaches we have covered .Hence our model can be summarized as
The last observed value of  we get is [-1.3286 0.0802 0.2631 0.0000 0.0034 0.0111 -0.4698] which is very interesting as the values of 'b's quite closely matches to xp30d07 with  = [a 1 a 2 a 3 b 1 b 2 b 3 ] but not the values of 'a's . Hence the only value of c we get here is -0.4698 . Not only does ARMAX add an moving average error term it also further reduced the difference between y and yhat (from the corresponding ARX based model)in this case and is therefore a better model for prediction . This is also stable as all the values of a lie in the unit circle .
The last observed value of  we get is [-1.2965 -0.1792 0.4905 0.0001 0.0056 0.0090 -0.2233] which is very interesting as the values of 'b's quite closely matches to xp40d03 with  = [a 1 a 2 a 3 b 1 b 2 b 3 ] but not the values of 'a's . Hence the only value of c we get here is -0.2233 . Not only does ARMAX add an moving average error term it also further reduced the difference between y and yhat (from the corresponding ARX based model)in this case and is therefore a better model for prediction . This is also stable as all the values of a lie in the unit circle .