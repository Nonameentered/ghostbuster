The objective of the report was to investigate the feasibility of implementing a low cost barcode reader for a sales counter. Many user requirements were considered and a system specification was developed. The functions considered were transaction operations, quantity input and barcode reading, decoding, processing and database matching. When designing the system these factors and functions were taken into account
A system was preliminary designed which currently meets the user requirements and system specification.
In total it cost For 100 hundred systems the cost per system would be The performance speed is suitable at 9ms and the memory burdens are not high at 16kb. The software for the system could be written and fully tested within 45 days. The user requirements and system specification will need to be revised in order to produce a better, more efficient, barcode reader system.
The implementation of a low-cost barcode reader for sales counters is feasible.
This report will investigate the feasibility of implementing a low-cost barcode reader at sales counters in a high street shopping area.
Many stores or shops have a large number of items that they sell, some stores selling tens of thousands of products. This makes it difficult for staff to remember all the prices of each individual item. Most of the product information, including its price, is stored on a computer somewhere within the store where the price can be accessed with ease. However it would take a long time for a staff member to enter the name of each product to find out its price. It would be better if there was a system in which a computer itself could identify the product and then give all the necessary information relating to that product. This system would be the barcode system.
The barcode system involves each product being labelled by a series of lines varying in width. E.g.
These lines represent bits which can be read by a high-resolution barcode wand; the black lines represent logic 1 and the white spaces represent logic 0. The barcode can be scanned by the wand, giving a bit pattern which corresponds to an item in the database.
In theory this works well however when dealing with a real time system there are other factors to be considered. The system would need to work well with the database of the store; it would need to be fast enough so that customers are not left waiting for too long; the system has to be cheap.
Overall the barcode system should be able to read a barcode, convert and send it to a database where it is matched and then related information sent back to a display where the user can obtain all the information needed.
This report will investigate the factors involved and decide whether it is feasible to implement a low-cost barcode reader for sales counters.
The system is to be used in a store or a shop. Therefore the requirements of this system will have to be most suited for a store or a shop. The focus of the system will have to lean towards customer efficiency, low cost and customer satisfaction.
This section will go through how the barcode system should operate and its functions.
The barcode system will have the following operations:
The system will have the following inputs:
The system will have the following outputs:
The ADD and WITHDRAW operations are fairly similar with the exception of which buttons is pressed to initiate the command and the result of the operation. Because of this they will be treated in the same manner under the TRANSACTION operation.
During a TRANSACTION:
The ADD or WITHDRAW button is pressed. The system then waits for the quantity value to be entered using the keypad on the barcode reader. If there is no quantity value entered the default value of 1 is used. Otherwise a quantity is entered and this number appears on the LCD display screen on the barcode reader. The scan point is then placed over the barcode to be read. When the SCAN button is pressed the barcode is read by the barcode reader. If the scan was unsuccessful then the barcode will emit three short beeps. The process will then have to be started from the beginning. If there is a successful scan then the barcode reader emits a single short beep.
During a successful scan the barcode input is decoded. The decoded data is sent with the ADD or WITHDRAW command and the quantity to a temporary memory area of the barcode system. The memory indicator will light up showing one memory slot is taken. A maximum of three barcodes may be processed at the same time. This will allow for the possibility of scanning barcodes more quickly. The earliest scanned barcode is taken from the memory and sent to the main server via high speed cables. The decoded data is matched in the database server and the item is then added to or withdrawn from the current bill. The quantity value will determine the number of items to be added or withdrawn. The information will be sent back through the system and shown on the display unit.
The TRANSACTION operation (from successful scan to sending information back to displays) should be completed normally in 1 second; it must never take longer than 2 seconds.
To carry out these functions the barcode reader must be specially designed. The barcode reader would have a 10-digit number pad on the top of it, three buttons, and a small LCD display screen. One button would be an 'add product' button and another would be a 'withdraw product' button. The final button would be the 'scan' button. On the side of the reader would be an indicator, showing how many barcodes are stored in the temporary memory area. There would also be an audio tweeter inside the reader.
The display unit would be a monitor or some sort of screen where information about scanned items and current shopping bills could be displayed.
These are the basic functions and operations that can be carried out by the staff member. This is a fairly simple process with few steps to be performed by the user. To make operations this simple the software and hardware of the system will have to be designed very well. The hardware will have to be able to scan the barcodes efficiently and accurately; the software will have to be able to decode the barcodes and match them quickly with the database values.
There are a few environmental and physical constraints to the system discussed so far. The main problems are with the barcode reader. The barcode reader may become damaged to due water or humidity. If the internal circuits were to come into contact with any moisture the circuits may become short circuited and therefore become unusable. Heat can also affect the barcode reader. If the reader were to be left in direct sunlight, or placed next to a heater, the plastic could melt damaging the circuits. The final problem with the barcode reader is that if it is not designed well it could become too heavy for regular use. Staff members would not be able to use the reader over extended periods of time making it useless.
If the barcode reader ever did malfunction there needs to be an alternate method of data entry since a store would be unable to sell goods. This should be in the form of a keyboard which had a connection, direct or indirect, to the server. The keyboard could be used to load up some software which would take barcode numbers and match them in the database as usual. This would be slower however it does provide a backup when emergency situations arise.
A system block diagram represents all the inputs and outputs of a system and how they relate to each other.
Designing this sort of system will take time and money. Because in all projects there are deadlines and budgets it is important to have an estimate of time and money so it can be considered whether a project is feasible or not.
After considering the system design, performance and costs it can be seen that a relatively useful system can be made within a good cost and time boundary. The execution time is very fast suggesting that there may not be a need for temporary memory storage of barcodes.
The design of the system may be finalised after a thorough review of the user requirements and the system specification. This may reveal more capabilities and may remove redundant requirements.
However a preliminary design of the system would have the software written in Modula 2. This was chosen over Ada or C because 'Of the three, Modula-2 is the smallest, easiest to read, easiest to learn, and cleanest designed, both syntactically and conceptually.' If the business requiring the system were a chain store and had many stores the software costs would be divided across all stores making the system cheaper than first realised.
The hardware is all relatively simple and cheap. The barcode reader may need some designing however, there are currently many similar barcode readers already available on the market.
The implementation of the device into the desired environment can reveal more changes that are needed to the system.
The system would have to be installed by professionals into each individual store. The business would need to supply their own server of data and ouput screens. The setup would involve connecting the server and outputs to the system and the barcode reader. Each store would require as many barcode readers as there are tills thus increasing the price of the hardware costs. However the system could be run off the same software keeping the software costs the same. If the system was to be implemented there would need to be consideration for wires and cables. There would be many cables going from barcode reader to system controller to server. Any of these could become damaged if not carefully arranged and precautions taken.
The report covered many factors and aspects of implementing a real time barcode system into a business. The user requirements and system specification have been fulfilled thus far; the design suggests they will still be fulfilled at completion of project. In total it cost If many systems were to be produced the software cost would be divided across all systems made. For 20 systems the cost would be For 100 hundred systems the cost per system would be reduced to The performance speed is suitable at 9ms and the memory burdens are not high at 16kb.
The implementation of a low-cost barcode reader for sales counters is feasible.