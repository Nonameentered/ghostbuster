The experiment was carried out using a Mitsubishi M16 microcontroller and IER Embedded Workbench. The given incomplete code which was written in C was completed, then debugged using C-Spy and executed via the hardware. This procedure was used to control one of the two 7-segmant LED displays to display a clockwise rotational pattern, all segments simultaneously and decimal point. Then the pattern starts again.
First the IER Embedded Workbench is opened and a new project is opened. This program supports the Mitsubishi M16 microprocessor.
Then the created project is set to default factory settings after choosing ICCM16C and X-Link in the project options. The program C-Spy was chosen as the debugger. Then in the project files the incomplete C code, .xcl file and .s34 file was selected. Then the incomplete C code was opened and the missing codes were entered.
The M16C development board was then connected to the power supply and the PC via the serial link. Then the circuit board was switched on and .s34 and .xcl files were added to the project. The C-Spy was run as the debugger and the program was executed in the ROM monitor mode via the M16 development board.
Then a clockwise rotational pattern display, simultaneous all segment display and the decimal point display could be observed repeatedly on the first 7-segment LED display.
There are two seven segment displays which are both connected to P 0 input/output port.P 0 is a 8-bit input/output port and the direction of the port is configured by PD 0(8-bit register) so each bit can be individually set to input or output.
The 8 pins in the port map on to the 7 segment display and the decimal point according to the table above. These pins first go through a buffer IC to power the LEDs on the display.
The bit patterns to display different segments in the display are defined in the program as 8 bit hex numbers and the table bellow displays the 8-bit hex numbers and their corresponding numbers in binary.