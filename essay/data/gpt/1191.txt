While completing a set of tasks using functional programming, I learned the importance of writing code in a way that prioritizes composition, immutability and pure functions. This approach encourages breaking down a problem into smaller, simpler parts, which can be combined to solve more complex problems. 
Using functional programming techniques has also taught me to be more mindful of the code I produce and to think more deeply about how it functions. Because functional programming relies on creating pure functions that don't mutate data, I had to spend more time thinking about how to structure my code to avoid data side effects. 
Overall, I found that functional programming encouraged me to write more modular code, with each function responsible for doing one thing and doing it well. This also allowed me to write more readable, understandable and maintainable code, which can help prevent errors and facilitate collaboration. 
The functional programming approach can also increase my ability to create reusable code and speed up the development process. With its emphasis on flexible code and its focus on abstraction, functional programming is a valuable tool that can help me to produce more elegant, efficient, and bug-free code going forward.