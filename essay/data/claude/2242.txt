The Izhikevich Neuron model is a mathematical model that can capture the electrical behavior of neurons in a biologically plausible manner, while still being computationally efficient enough to simulate large-scale neuronal networks. It was proposed by Eugene Izhikevich in 2003 as a way to emulate the full dynamics of neuronal spikes with just two differential equations. Compared to more complex Hodgkin-Huxley style models with many ion channels and parameters to tune, the Izhikevich model only requires setting four parameters to characterize a neuron: a, b, c, and d. By adjusting these four parameters, the model can exhibit a wide range of neuronal dynamics from regular spiking to bursting behavior.

In developing a simulator for Izhikevich neurons on a conceptual digital hardware platform, one of the first challenges was finding an efficient way to represent the four model parameters and propagate them through the calculations. I settled on storing the parameters in a structure with four floating point values. For each neuron, its parameters were loaded into this structure, which was then used throughout the simulation calculations for that specific neuron. 

Another challenge was implementing the differential equations that govern the model in a way that could scale to large networks. I chose to use a simple Euler discretization method with a time step of 0.1 ms, which provided sufficient accuracy for most purposes. At each time step, the membrane potential and recovery variable for each neuron were updated based on the model equations. The updated values were stored and used as inputs for the next time step. 

One area of potential improvement for the simulator is implementing adaptive time stepping to increase efficiency. When a neuron is not spiking, the time step could be increased, and when it is spiking the time step decreased. This could allow for larger network simulations. Another enhancement would be adding delays or conduction velocities for synapses to model the propagation of spikes between neurons. Adding spike-timing dependent plasticity could also enable modeling of how neuronal connections change over time.

Through this project I learned the value of keeping models as simple as possible while still capturing the essence of the system. The Izhikevich model is a prime example of a model that is complex enough to exhibit biological neuronal behavior but simple enough to be computationally tractable. I also learned the importance of choosing numerical methods that are suitable for the scale of the problem. The Euler method works well for this simulator, but more complex methods would be needed for extremely large-scale simulations. Overall, this project gave me valuable experience with computational neuroscience and simulator development.