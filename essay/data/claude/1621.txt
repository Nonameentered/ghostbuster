Creating an animated SVG involves several steps: defining static elements, grouping elements,  adding animation, and assembling the final product. 

To begin, the basic shapes and paths that comprise the animation are defined using SVG shape and path elements like <rect>, <circle>, <line>, <polyline>, and <path>. These shapes are styled with attributes like fill, stroke, stroke-width, etc. The shapes are then grouped together using the <g> element to logically organize related shapes. For example, a car might have groups for the body, wheels, windows, and so on.  Grouping the shapes provides a useful organizational structure for applying animation effects.

With the static elements defined, animation can be added to produce movement.  This is done by defining keyframes with the  <animate> element and specifying attributes like dur for duration, values for the start and end points of the animation,  fill for the animation behavior before it starts and after it ends, and repeatCount. For example, to animate the position of a circle across the screen, <animate> can be added to the <circle> element with a dur of 5s, values of "0,0; 200,200", and a repeatCount of "indefinite" to make it repeat endlessly. 

Finally, the elements are assembled to complete the animation. This is done by nesting the groups and animate elements within an <svg> parent element. The <svg> element defines the overall size of the image and viewport for the animation. Additional elements like <defs> for defining gradients and <use> for reusing elements can also be incorporated. The end result is a complex, multifaceted animation powered entirely by vector graphics and a bit of code.

With a logical progression of building up from basic shapes to grouped elements to animated elements and finally assembling everything together, intricate animations and motion graphics can be achieved using the SVG format. The end result is a scalable, resolution-independent animation suitable for environments like the web.